ettm2 = "& 96 & \\% & 0.168 & 0.262 & 0.167 & 0.255 & 0.167 & 0.260 & 0.164 & 0.253 & & & 0.355 & 0.462 & 0.192 & 0.274 & 0.166 & 0.256 \\\\" +\
         "& 192 & \\% & 0.232 & 0.308 & 0.221 & 0.293 & 0.224 & 0.303 & 0.219 & 0.290 & & & 0.595 & 0.586 & 0.280 & 0.339 & 0.223 & 0.296 \\\\" +\
         "& 336 & \\% & 0.320 & 0.373 & 0.274 & 0.327 & 0.281 & 0.342 & 0.273 & 0.326 & & & 1.270 & 0.871 & 0.334 & 0.361 & 0.274 & 0.329 \\\\" +\
         "& 720 & \\% & 0.413 & 0.435 & 0.368 & 0.384 & 0.397 & 0.421 & 0.366 & 0.385 & & & 3.001 & 1.267 & 0.417 & 0.413 & 0.362 & 0.385 \\\\"

ettm1 = "& 96 & \\% & 0.308 & 0.352 & 0.306 & 0.348 & 0.299 & 0.343 & 0.301 & 0.342 & & & 0.626 & 0.560 & 0.386 & 0.398 & 0.293 & 0.346 \\\\" +\
         "& 192 & \\% & 0.340 & 0.369 & 0.349 & 0.375 & 0.335 & 0.365 & 0.335 & 0.363 & & & 0.725 & 0.619 & 0.459 & 0.444 & 0.333 & 0.370 \\\\" +\
         "& 336 & \\% & 0.376 & 0.393 & 0.375 & 0.388 & 0.369 & 0.386 & 0.370 & 0.383 & & & 1.005 & 0.741 & 0.495 & 0.464 & 0.369 & 0.392 \\\\" +\
         "& 720 & \\% & 0.440 & 0.435 & 0.433 & 0.422 & 0.425 & 0.421 & 0.425 & 0.414 & & & 1.133 & 0.845 & 0.585 & 0.516 & 0.416 & 0.420 \\\\"

etth2 = "& 96 & \\% & 0.288 & 0.352 & 0.277 & 0.338 & 0.289 & 0.353 & 0.262 & 0.331 & & & 1.549 & 0.952 & 0.476 & 0.458 & 0.274 & 0.337 \\\\" +\
        " & 192 & \\% & 0.377 & 0.413 & 0.344 & 0.381 & 0.383 & 0.418 & 0.319 & 0.374 & & & 3.792 & 1.542 & 0.512 & 0.493 & 0.341 & 0.382 \\\\" +\
        " & 336 & \\% & 0.452 & 0.461 & 0.357 & 0.400 & 0.448 & 0.465 & 0.325 & 0.386 & & & 4.215 & 1.642 & 0.552 & 0.551 & 0.329 & 0.384 \\\\" + \
        " & 720 & \\% & 0.698 & 0.595 & 0.394 & 0.436 & 0.605 & 0.551 & 0.372 & 0.421 & & & 3.656 & 1.619 & 0.562 & 0.560 & 0.379 & 0.422 \\\\"

etth1 = "& 96 & \\% & 0.375 & 0.397 & 0.374 & 0.394 & 0.375 & 0.399 & 0.366 & 0.391 & & & 0.941 & 0.769 & 0.513 & 0.491 & 0.370 & 0.400 \\\\" + \
        " & 192 & \\% & 0.418 & 0.429 &  0.408 & 0.415 & 0.405 & 0.416 & 0.404 & 0.412 & & & 1.007 & 0.786 & 0.534 & 0.504 & 0.413 & 0.429 \\\\" + \
        " & 336 & \\% & 0.479 & 0.476 & 0.429 & 0.427 & 0.439 & 0.443 & 0.420 & 0.423 & & & 1.038 & 0.784 & 0.588 & 0.535 & 0.422 & 0.440 \\\\" + \
        " & 720 & \\% & 0.624 & 0.592 & 0.440 & 0.453 & 0.472 & 0.490 & 0.442 & 0.456 & & & 1.144 & 0.857 & 0.643 & 0.616 & 0.447 & 0.468 \\\\"

ILI = "& 96 & \\% & 1.947 & 0.985 & 1.683 & 0.858 & 2.215 & 1.081 & & & & & 4.657 & 1.449 & 2.294 & 0.945 & 1.319 & 0.754 \\\\" +\
         "& 192 & \\% & 2.182 &  1.036 &  1.703 & 0.859 & 1.963 & 0.963 & & & & & 4.650 & 1.463 & 1.825 & 0.848 & 1.579 & 0.870 \\\\" +\
         "& 336 & \\% & 2.256 & 1.060 & 1.719 & 0.884 & 2.130 &  1.024 & & & & & 5.004 & 1.542 & 2.010 & 0.900 & 1.553 & 0.815 \\\\" +\
         "& 720 & \\% & 2.390 & 1.104 & 1.819 & 0.917 & 2.368 & 1.096 & & & & & 5.071 & 1.543 & 2.178 & 0.963 & 1.470 & 0.788 \\\\"

weather = "& 96 & \\% & 0.176 & 0.236 & 0.182 & 0.232 & 0.176 & 0.237 & 0.175 & 0.225 & & & 0.354 & 0.405 & 0.173 & 0.223 & 0.149 & 0.198 \\\\" +\
         "& 192 & \\% &  0.218 & 0.276 &  0.225 & 0.269 & 0.220 & 0.282 & 0.218 & 0.260 & & & 0.419 & 0.434 & 0.245 & 0.285 & 0.194 & 0.241 \\\\" +\
         "& 336 & \\% & 0.262 & 0.312 & 0.271 & 0.301 & 0.265 & 0.319 & 0.265 & 0.294 & & & 0.583 & 0.543 & 0.321 & 0.338 & 0.245 & 0.282 \\\\" +\
         "& 720 & \\% & 0.326 & 0.365 & 0.338 & 0.348 & 0.323 & 0.362 & 0.329 & 0.339 & & & 0.916 & 0.705 & 0.414 & 0.410 & 0.314 & 0.334 \\\\"

traffic = "& 96 & \\% & 0.410 & 0.282 & 0.410 & 0.279 & 0.410 & 0.282 & & & & & 0.733 & 0.410 & 0.612 & 0.338 & 0.360 & 0.249 \\\\" + \
        "& 192 & \\% & 0.423 & 0.287 & 0.423 & 0.284 & 0.423 & 0.287 & & & & & 0.777 & 0.435 & 0.613 & 0.340 & 0.379 & 0.256 \\\\" + \
        "& 336 & \\% & 0.436 & 0.295 & 0.435 & 0.290 & 0.436 & 0.296 & & & & & 0.776 & 0.434 & 0.618 & 0.328 & 0.392 & 0.264 \\\\" + \
        "& 720 & \\% & 0.466 & 0.315 & 0.464 & 0.307 & 0.466 & 0.315 & & & & & 0.827 & 0.466 & 0.653 & 0.355 & 0.432 & 0.286 \\\\"

electricity = "& 96 & \\% & 0.140 & 0.237 & 0.141 & 0.237 & 0.140 & 0.237 & & & & & 0.304 & 0.393 & 0.169 & 0.273 & 0.129 & 0.222 \\\\" +\
        "& 192 & \\% & 0.153 & 0.250 & 0.154 & 0.248 & 0.153 & 0.249 & & & & & 0.327 & 0.417 & 0.182 & 0.286 & 0.147 & 0.240 \\\\" +\
        "& 336 & \\% & 0.169 & 0.268 & 0.171 & 0.265 & 0.169 & 0.267 & & & & & 0.333 & 0.422 & 0.200 & 0.304 & 0.163 & 0.259 \\\\" +\
        "& 720 & \\% & 0.203 & 0.301 & 0.210 & 0.297 & 0.203 & 0.301 & & & & & 0.351 & 0.427 & 0.222 & 0.321 & 0.197 & 0.290 \\\\"


if __name__ == "__main__":
    data = ettm2

    sep = "\\\\"
    ignore_first_rows = 3

    data_list = data.split(sep)

    for row in data_list:
        row_list = row.replace(" ", "").split("&")
        start = row_list[:ignore_first_rows]
        end_0 = row_list[ignore_first_rows:]

        end_1 = [float(end_0[i]) if end_0[i].replace(".", "", 1).isdigit() else 0 for i in range(len(end_0)) if i % 2 == 0]
        end_2 = [float(end_0[i]) if end_0[i].replace(".", "", 1).isdigit() else 0 for i in range(len(end_0)) if i % 2 == 1]

        if len(end_1) != len(end_2):
            print(end_1)
            print(end_2)
            raise Exception("Something went wrong")

        sorted_end_1, sorted_end_2 = [i for i in end_1 if i != 0], [i for i in end_2 if i != 0]
        sorted_end_1, sorted_end_2 = list(set(sorted_end_1)), list(set(sorted_end_2))
        sorted_end_1, sorted_end_2 = sorted(sorted_end_1)[:2], sorted(sorted_end_2)[:2]

        if len(sorted_end_1) == 0 or len(sorted_end_2) == 0:
            continue

        n_row = ""

        for s in start:
            n_row += s + " & "

        iter = sorted(list(range(0, len(end_1))) * 2)
        counter = 0

        for i in iter:
            a = end_1 if counter % 2 == 0 else end_2
            s = sorted_end_1 if counter % 2 == 0 else sorted_end_2

            if a[i] == s[0]:
                n_row += "\\textbf{" + "{:.3f}".format(s[0]) + "} & "
            elif a[i] == s[1]:
                n_row += "\\underline{" + "{:.3f}".format(s[1]) + "} & "
            elif a[i] == 0:
                n_row += "& "
            else:
                n_row += "{:.3f}".format(a[i]) + " & "

            counter += 1

        n_row = n_row[:-2]
        n_row += sep
        print(n_row)

